
*filter
:INPUT ACCEPT [0:0]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [0:0]

:bad_tcp_packets - [0:0]
:bad_robots - [0:0]


#########
# INPUT #
#########
-A INPUT -j bad_tcp_packets
-A INPUT -j bad_robots

# local network
# TBD: we may want to limit the 10.x.x.x IP to make sure other local
#      computers cannot use that IP to connect to us
-A INPUT -i lo -s 107.170.33.225 -j ACCEPT
-A INPUT -i lo -s 10.128.97.11 -j ACCEPT
-A INPUT -i lo -s 10.0.0.1 -j ACCEPT
-A INPUT -i lo -s 127.0.0.1 -j ACCEPT
-A INPUT -i lo -j LOG --log-prefix "reject_lo: " --log-uid
-A INPUT -i lo -j REJECT

# Accept all existing connections
-A INPUT -i eth0 -p tcp -m state --state ESTABLISHED,RELATED -m tcp ! --syn -d 107.170.33.225 -j ACCEPT
-A INPUT -i eth1 -p tcp -m state --state ESTABLISHED,RELATED -m tcp ! --syn -d 10.128.97.13 -j ACCEPT
-A INPUT -i eth1 -p tcp -m state --state ESTABLISHED,RELATED -m tcp ! --syn -d 10.128.97.11 -j ACCEPT
-A INPUT -i eth1 -p tcp -m state --state ESTABLISHED,RELATED -m tcp ! --syn -d 10.128.62.17 -j ACCEPT

# Very much limit port 22 (SSH)
-A INPUT -i eth0 -p tcp -m tcp --dport 22 -d 107.170.33.225 -s 162.226.130.121 --syn -j ACCEPT
-A INPUT -i eth0 -p tcp -m tcp --dport 22 -d 107.170.33.225 -s 173.14.79.185 --syn -j ACCEPT
-A INPUT -i eth0 -p tcp -m tcp --dport 22 -d 107.170.33.225 -s 173.14.79.186 --syn -j ACCEPT
-A INPUT -i eth0 -p tcp -m tcp --dport 22 -d 107.170.33.225 -s 107.170.196.5 --syn -j ACCEPT
# Reject any connections (i.e. --syn) from anywhere else on that port
-A INPUT -i eth0 -p tcp -m tcp --dport 22 -d 107.170.33.225 --syn -j LOG --log-prefix "unwanted SSH: " --log-uid
-A INPUT -i eth0 -p tcp -m tcp --dport 22 -d 107.170.33.225 --syn -j REJECT --reject-with icmp-port-unreachable

# Various services
-A INPUT -i eth0 -p tcp -m tcp --dport 25 -d 107.170.33.225 --syn -j ACCEPT
-A INPUT -i eth0 -p tcp -m tcp --dport 53 -d 107.170.33.225 --syn -j ACCEPT
-A INPUT -i eth0 -p udp -m udp --sport 53 -d 107.170.33.225 -j ACCEPT
# IN=eth0 OUT= SRC=8.8.8.8 DST=107.170.33.225 PROTO=UDP SPT=53 DPT=58920
-A INPUT -i eth0 -p tcp -m tcp --dport 80 -d 107.170.33.225 --syn -j ACCEPT
-A INPUT -i eth0 -p tcp -m tcp --dport 443 -d 107.170.33.225 --syn -j ACCEPT
#-A INPUT -i eth1 -p tcp -m tcp -s 10.0.0.1 -d 10.0.0.2 --syn -j ACCEPT
#-A INPUT -i eth1 -p tcp -m tcp -s 10.0.0.2 -d 10.0.0.1 --syn -j ACCEPT
-A INPUT -i eth1 -p tcp -m tcp -s 10.128.97.13 -d 10.128.97.11 --syn -j ACCEPT
-A INPUT -i eth1 -p tcp -m tcp -s 10.128.62.17 -d 10.128.97.11 --syn -j ACCEPT
#-A INPUT -i eth1 -p udp -m udp -s 10.0.0.1 -d 10.0.0.2 -j ACCEPT
#-A INPUT -i eth1 -p udp -m udp -s 10.0.0.2 -d 10.0.0.1 -j ACCEPT
-A INPUT -i eth1 -p udp -m udp -s 10.128.97.13 -d 10.128.97.11 -j ACCEPT
-A INPUT -i eth1 -p udp -m udp -s 10.128.62.17 -d 10.128.97.11 -j ACCEPT

# Allow pings
-A INPUT -i eth0 -p icmp --icmp-type any -j ACCEPT
-A INPUT -i eth1 -p icmp --icmp-type any -j ACCEPT

# Reject anything else!
-A INPUT -i eth0 -j LOG --log-prefix "block service: " --log-uid
-A INPUT -i eth1 -j LOG --log-prefix "block service: " --log-uid
-A INPUT -i eth0 -p all -j REJECT
-A INPUT -i eth1 -p all -j REJECT


###################
# bad_tcp_packets #
###################
# Bad TCP packets (from the wrong addresses)
# We just don't respond
-A bad_tcp_packets -i eth0 -s 192.168.0.0/16 -j LOG --log-prefix "bad_tcp_packet(192): " --log-uid
-A bad_tcp_packets -i eth0 -s 192.168.0.0/16 -j DROP
-A bad_tcp_packets -i eth0 -s 10.0.0.0/8 -j LOG --log-prefix "bad_tcp_packet(10): " --log-uid
-A bad_tcp_packets -i eth0 -s 10.0.0.0/8 -j DROP
-A bad_tcp_packets -i eth0 -s 172.16.0.0/12 -j LOG --log-prefix "bad_tcp_packet(172): " --log-uid
-A bad_tcp_packets -i eth0 -s 172.16.0.0/12 -j DROP
-A bad_tcp_packets -i eth0 -s 224.0.0.0/3 -j LOG --log-prefix "bad_tcp_packet(224): " --log-uid
-A bad_tcp_packets -i eth0 -s 224.0.0.0/3 -j DROP
-A bad_tcp_packets -i eth0 -s 0.0.0.0/8 -j LOG --log-prefix "bad_tcp_packet(0): " --log-uid
-A bad_tcp_packets -i eth0 -s 0.0.0.0/8 -j DROP
-A bad_tcp_packets -i eth0 -s 1.0.0.0/8 -j LOG --log-prefix "bad_tcp_packet(1): " --log-uid
-A bad_tcp_packets -i eth0 -s 1.0.0.0/8 -j DROP
-A bad_tcp_packets -i eth0 -s 2.0.0.0/8 -j LOG --log-prefix "bad_tcp_packet(2): " --log-uid
-A bad_tcp_packets -i eth0 -s 2.0.0.0/8 -j DROP

# Let out local network computers communicate via our VPN
-A bad_tcp_packets -i eth1 -s 10.128.97.13 -j RETURN
-A bad_tcp_packets -i eth1 -s 10.128.62.17 -j RETURN
#-A bad_tcp_packets -i eth1 -s 10.0.0.2 -j RETURN -- this would be for tun0

-A bad_tcp_packets -i eth1 -s 192.168.0.0/16 -j LOG --log-prefix "bad_tcp_packet(192): " --log-uid
-A bad_tcp_packets -i eth1 -s 192.168.0.0/16 -j DROP
-A bad_tcp_packets -i eth1 -s 10.0.0.0/8 -j LOG --log-prefix "bad_tcp_packet(10): " --log-uid
-A bad_tcp_packets -i eth1 -s 10.0.0.0/8 -j DROP
-A bad_tcp_packets -i eth1 -s 172.16.0.0/12 -j LOG --log-prefix "bad_tcp_packet(172): " --log-uid
-A bad_tcp_packets -i eth1 -s 172.16.0.0/12 -j DROP
-A bad_tcp_packets -i eth1 -s 224.0.0.0/3 -j LOG --log-prefix "bad_tcp_packet(224): " --log-uid
-A bad_tcp_packets -i eth1 -s 224.0.0.0/3 -j DROP
-A bad_tcp_packets -i eth1 -s 0.0.0.0/8 -j LOG --log-prefix "bad_tcp_packet(0): " --log-uid
-A bad_tcp_packets -i eth1 -s 0.0.0.0/8 -j DROP
-A bad_tcp_packets -i eth1 -s 1.0.0.0/8 -j LOG --log-prefix "bad_tcp_packet(1): " --log-uid
-A bad_tcp_packets -i eth1 -s 1.0.0.0/8 -j DROP
-A bad_tcp_packets -i eth1 -s 2.0.0.0/8 -j LOG --log-prefix "bad_tcp_packet(2): " --log-uid
-A bad_tcp_packets -i eth1 -s 2.0.0.0/8 -j DROP

##############
# bad_robots #
##############
# This queue is for Snap! to add robots that are doing DoS attacks
# and other annoying robots



##########
# OUTPUT #
##########
-A OUTPUT -o lo -d 127.0.0.1 -j ACCEPT
-A OUTPUT -o lo -d 10.0.0.1 -j ACCEPT
-A OUTPUT -o lo -d 107.170.33.225 -j ACCEPT
-A OUTPUT -o lo -d 10.128.97.11 -j ACCEPT
-A OUTPUT -o lo -j REJECT

-A OUTPUT -o eth0 -p tcp -m tcp -s 107.170.33.225 -j ACCEPT
-A OUTPUT -o eth0 -p udp -m udp -s 107.170.33.225 -j ACCEPT
-A OUTPUT -o eth0 -p icmp -m icmp --icmp-type any -s 107.170.33.225 -j ACCEPT
-A OUTPUT -o eth0 -j REJECT

-A OUTPUT -o eth1 -p tcp -m tcp -j ACCEPT
-A OUTPUT -o eth1 -p udp -m udp -j ACCEPT
-A OUTPUT -o eth1 -p icmp -m icmp --icmp-type any -j ACCEPT
-A OUTPUT -o eth1 -j REJECT

# Apply all of that now
COMMIT

