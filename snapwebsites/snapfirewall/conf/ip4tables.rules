# Current default firewall.
#
# This will be converted to a fully dynamic firewall setup capability
# through our iplock tool and snapfirewall to manage the rules. Until
# then, we install this by default. It can be edited as required by
# your setup.
#
# After changes to this file, make sure to run:
#
#      /etc/network/firewall
#
# If you add or edit a LOG rule, make sure to keep "[iptables] " at the
# start of the message, otherwise it will go to the wrong file(s).
#

*filter
:INPUT ACCEPT [0:0]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [0:0]

:bad_tcp_packets - [0:0]
:unwanted - [0:0]


#########
# INPUT #
#########

# prevent unauthorized local traffic
-A INPUT -j bad_tcp_packets

# local network
-A INPUT -i lo -s 127.0.0.1 -j ACCEPT
-A INPUT -i lo -s 127.0.1.1 -j ACCEPT
-A INPUT -i lo -s @PUBLIC_IP@ -j ACCEPT
-A INPUT -i lo -s @PRIVATE_IP@ -j ACCEPT
-A INPUT -i lo -s @SECURE_IP@ -j ACCEPT
-A INPUT -i lo -j LOG --log-prefix "reject_lo: " --log-uid
-A INPUT -i lo -j REJECT

# Accept all existing TCP and UDP connections
-A INPUT -i @PUBLIC_INTERFACE@ -p tcp -m state --state ESTABLISHED,RELATED -m tcp ! --syn -d @PUBLIC_IP@ -j ACCEPT
-A INPUT -i @PRIVATE_INTERFACE@ -p tcp -m state --state ESTABLISHED,RELATED -m tcp ! --syn -d @PRIVATE_IP@ -j ACCEPT
#-A INPUT -i @PRIVATE_INTERFACE@ -p tcp -m state --state ESTABLISHED,RELATED -m tcp ! --syn -d @PRIVATE_NETWORK_IPS@ -j ACCEPT
-A INPUT -i @PUBLIC_INTERFACE@ -p udp -m state --state ESTABLISHED,RELATED -m udp -d @PUBLIC_IP@ -j ACCEPT

# Very much limit port 22 (SSH)
-A INPUT -i @PUBLIC_INTERFACE@ -p tcp -m tcp --dport 22 -d @PUBLIC_IP@ -s @ADMIN_IPS@ --syn -j ACCEPT

# prevent banned traffic, but after administrators on port 22
-A INPUT -j unwanted

# Reject any new connections (i.e. --syn) from anywhere else on port 22
-A INPUT -i @PUBLIC_INTERFACE@ -p tcp -m tcp --dport 22 -d @PUBLIC_IP@ --syn -j LOG --log-prefix "[iptables] unwanted SSH: " --log-uid
-A INPUT -i @PUBLIC_INTERFACE@ -p tcp -m tcp --dport 22 -d @PUBLIC_IP@ --syn -j REJECT --reject-with icmp-port-unreachable

# Temporary to initialize website from your computer
# (i.e. give access to snapserver or a Cassandra node over the Internet)
#-A INPUT -i @PUBLIC_INTERFACE@ -p tcp -m tcp --dport 4004 -d @PUBLIC_IP@ -s @ADMIN_IPS@ --syn -j ACCEPT
#-A INPUT -i @PUBLIC_INTERFACE@ -p tcp -m tcp --dport 9042 -d @PUBLIC_IP@ -s @ADMIN_IPS@ --syn -j ACCEPT

# Various services
# SMTP (postfix)
-A INPUT -i @PUBLIC_INTERFACE@ -p tcp -m tcp --dport 25 -d @PUBLIC_IP@ --syn -j ACCEPT
# DNS (bind)
-A INPUT -i @PUBLIC_INTERFACE@ -p tcp -m tcp --dport 53 -d @PUBLIC_IP@ --syn -j ACCEPT
-A INPUT -i @PUBLIC_INTERFACE@ -p udp -m udp --dport 53 -d @PUBLIC_IP@ -j ACCEPT
# NTP
#-A INPUT -i @PUBLIC_INTERFACE@ -p tcp -m tcp --dport 123 -d @PUBLIC_IP@ --syn -j ACCEPT
#-A INPUT -i @PUBLIC_INTERFACE@ -p udp -m udp --dport 123 -d @PUBLIC_IP@ -j ACCEPT
# Apache
-A INPUT -i @PUBLIC_INTERFACE@ -p tcp -m tcp --dport 80 -d @PUBLIC_IP@ --syn -j ACCEPT
-A INPUT -i @PUBLIC_INTERFACE@ -p tcp -m tcp --dport 443 -d @PUBLIC_IP@ --syn -j ACCEPT
#-A INPUT -i @PUBLIC_INTERFACE@ -p tcp -m tcp --dport 80 -d @PUBLIC_IP@ -s @ADMIN_IPS@ --syn -j ACCEPT
#-A INPUT -i @PUBLIC_INTERFACE@ -p tcp -m tcp --dport 443 -d @PUBLIC_IP@ -s @ADMIN_IPS@ --syn -j ACCEPT

# LAN (TCP/UDP)
-A INPUT -i @PRIVATE_INTERFACE@ -p tcp -m tcp -s @PRIVATE_NETWORK_IPS@ -d @PRIVATE_IP@ --syn -j ACCEPT
-A INPUT -i @PRIVATE_INTERFACE@ -p udp -m udp -s @PRIVATE_NETWORK_IPS@ -d @PRIVATE_IP@ -j ACCEPT

# Prevent ICMP timestamp requests from the public interface
-A INPUT -i @PUBLIC_INTERFACE@ -p icmp --icmp-type timestamp-request -j DROP

# Allow pings
-A INPUT -i @PUBLIC_INTERFACE@ -p icmp --icmp-type any -j ACCEPT
-A INPUT -i @PRIVATE_INTERFACE@ -p icmp --icmp-type any -j ACCEPT

# ACK, RST, FIN|ACK and PSH|ACK happen from legitimate IPs, when they are not
# properly established connections; however, logging such is not a
# good idea since fail2ban could block otherwise legitimate connections
-A INPUT -i @PUBLIC_INTERFACE@ -p tcp -m tcp --tcp-flags ALL ACK -d @PUBLIC_IP@ -j REJECT
-A INPUT -i @PUBLIC_INTERFACE@ -p tcp -m tcp --tcp-flags ALL RST -d @PUBLIC_IP@ -j REJECT
-A INPUT -i @PUBLIC_INTERFACE@ -p tcp -m tcp --tcp-flags ALL FIN,ACK -d @PUBLIC_IP@ -j REJECT
-A INPUT -i @PUBLIC_INTERFACE@ -p tcp -m tcp --tcp-flags ALL PSH,ACK -d @PUBLIC_IP@ -j REJECT

# The following happen all the time and we can just ignore them all
# otherwise we really swamp fail2ban, snapfirewall, and Cassandra
#
#     21      ftp/fsp
#     22      ssh (also 222, 2222)
#     23      telnet (also 123, 2323)
#     81      http-alt (also 8000, 8001, 8080, 8081, 8088, 8089, 8888)
#    137      netbios
#    138      netbios
#    139      netbios
#    666      hell (also 6666)
#    947      apply-rpc
#   1900      ssdp (plug and play)
#   4343      https-alt
#   5060      sip
#   5555      ucm (Oracle universion content manager)
#   7547      cwmp (various routers offering remote connections)
#   7777      ichat
#
# WARNING: You cannot put more than 15 ports per line
#
-A INPUT -i @PUBLIC_INTERFACE@ -p tcp -m multiport -d @PUBLIC_IP@ --dports 21,22,222,2222,23,123,2323,81,8000,8001,8080,8081,8088,8089,8888 -j DROP
-A INPUT -i @PUBLIC_INTERFACE@ -p tcp -m multiport -d @PUBLIC_IP@ --dports 137,138,139,666,6666,947,1900,4343,5060,5555,7547,7777 -j DROP

# Drop anything else!
-A INPUT -i @PUBLIC_INTERFACE@ -j LOG --log-prefix "[iptables] unknown: " --log-uid
-A INPUT -i @PRIVATE_INTERFACE@ -j LOG --log-prefix "[iptables] unknown: " --log-uid
-A INPUT -i @PUBLIC_INTERFACE@ -p all -j DROP
-A INPUT -i @PRIVATE_INTERFACE@ -p all -j DROP


###################
# bad_tcp_packets #
###################
# Bad TCP packets (from the wrong addresses)
# We just don't respond

# Let the administrator connect to this computer
-A bad_tcp_packets -i @PUBLIC_INTERFACE@ -s @ADMIN_IPS@ -j RETURN

# Let our local network computers communicate
-A bad_tcp_packets -i @PRIVATE_INTERFACE@ -s @PRIVATE_NETWORK_IPS@ -j RETURN

-A bad_tcp_packets -i @PUBLIC_INTERFACE@ -s 192.168.0.0/16 -j LOG --log-prefix "[iptables] (192): " --log-uid
-A bad_tcp_packets -i @PUBLIC_INTERFACE@ -s 192.168.0.0/16 -j DROP
-A bad_tcp_packets -i @PUBLIC_INTERFACE@ -s 10.0.0.0/8 -j LOG --log-prefix "[iptables] (10): " --log-uid
-A bad_tcp_packets -i @PUBLIC_INTERFACE@ -s 10.0.0.0/8 -j DROP
-A bad_tcp_packets -i @PUBLIC_INTERFACE@ -s 172.16.0.0/12 -j LOG --log-prefix "[iptables] (172): " --log-uid
-A bad_tcp_packets -i @PUBLIC_INTERFACE@ -s 172.16.0.0/12 -j DROP
-A bad_tcp_packets -i @PUBLIC_INTERFACE@ -s 224.0.0.0/3 -j LOG --log-prefix "[iptables] (224): " --log-uid
-A bad_tcp_packets -i @PUBLIC_INTERFACE@ -s 224.0.0.0/3 -j DROP
-A bad_tcp_packets -i @PUBLIC_INTERFACE@ -s 0.0.0.0/8 -j LOG --log-prefix "[iptables] (0): " --log-uid
-A bad_tcp_packets -i @PUBLIC_INTERFACE@ -s 0.0.0.0/8 -j DROP

-A bad_tcp_packets -i @PRIVATE_INTERFACE@ -s 192.168.0.0/16 -j LOG --log-prefix "[iptables] (192): " --log-uid
-A bad_tcp_packets -i @PRIVATE_INTERFACE@ -s 192.168.0.0/16 -j DROP
-A bad_tcp_packets -i @PRIVATE_INTERFACE@ -s 10.0.0.0/8 -j LOG --log-prefix "[iptables] (10): " --log-uid
-A bad_tcp_packets -i @PRIVATE_INTERFACE@ -s 10.0.0.0/8 -j DROP
-A bad_tcp_packets -i @PRIVATE_INTERFACE@ -s 172.16.0.0/12 -j LOG --log-prefix "[iptables] (172): " --log-uid
-A bad_tcp_packets -i @PRIVATE_INTERFACE@ -s 172.16.0.0/12 -j DROP
-A bad_tcp_packets -i @PRIVATE_INTERFACE@ -s 224.0.0.0/3 -j LOG --log-prefix "[iptables] (224): " --log-uid
-A bad_tcp_packets -i @PRIVATE_INTERFACE@ -s 224.0.0.0/3 -j DROP
-A bad_tcp_packets -i @PRIVATE_INTERFACE@ -s 0.0.0.0/8 -j LOG --log-prefix "[iptables] (0): " --log-uid
-A bad_tcp_packets -i @PRIVATE_INTERFACE@ -s 0.0.0.0/8 -j DROP

############
# unwanted #
############
# This queue is for Snap! to add robots that are doing DoS attacks
# and other annoying robots



##########
# OUTPUT #
##########
-A OUTPUT -o lo -d 127.0.0.1 -j ACCEPT
-A OUTPUT -o lo -d 127.0.1.1 -j ACCEPT
-A OUTPUT -o lo -d @PUBLIC_IP@ -j ACCEPT
-A OUTPUT -o lo -d @PRIVATE_IP@ -j ACCEPT
-A OUTPUT -o lo -d @SECURE_IP@ -j ACCEPT
-A OUTPUT -o lo -j REJECT

# Prevent ICMP timestamp requests replies on the public interface
-A OUTPUT -o @PUBLIC_INTERFACE@ -p icmp --icmp-type timestamp-reply -j DROP

-A OUTPUT -o @PUBLIC_INTERFACE@ -p tcp -m tcp -s @PUBLIC_IP@ -j ACCEPT
-A OUTPUT -o @PUBLIC_INTERFACE@ -p udp -m udp -s @PUBLIC_IP@ -j ACCEPT
-A OUTPUT -o @PUBLIC_INTERFACE@ -p icmp -m icmp --icmp-type any -s @PUBLIC_IP@ -j ACCEPT

-A OUTPUT -o @PRIVATE_INTERFACE@ -p tcp -m tcp -d @PRIVATE_NETWORK_IPS@ -j ACCEPT
-A OUTPUT -o @PRIVATE_INTERFACE@ -p udp -m udp -d @PRIVATE_NETWORK_IPS@ -j ACCEPT
-A OUTPUT -o @PRIVATE_INTERFACE@ -p icmp -m icmp --icmp-type any -j ACCEPT

# If the public and private interfaces are the same, then we accept
# nearly everything over that wire... so the REJECT here will probably
# never be reached...
-A OUTPUT -o @PUBLIC_INTERFACE@ -j REJECT
-A OUTPUT -o @PRIVATE_INTERFACE@ -j REJECT

# Apply all of that now
COMMIT
