#!/bin/sh -e


# in case the firewall was modified, we want to update it
# (i.e. updates in ip4tables.rules / ip6tables.rules and similar)
#
# We MUST run this command before the deb helpers otherwise it
# will possibly remove the unwanted rules that snapfirewall will
# add and thus we would not have the correct firewall rules
#
if [ "$1" = "configure" ]
then
    /etc/network/firewall
fi


#DEBHELPER#

# Source debconf library.
. /usr/share/debconf/confmodule


if [ "$1" = "configure" ]
then
    PACKAGENAME=snapfirewall

    # Create files representing each service offered by this package
    #
    SERVICES_DIR=/usr/share/snapwebsites/services
    touch $SERVICES_DIR/${PACKAGENAME}.service

    # Create the logfile because the snapwebsites user may have
    # difficulties with it otherwise during logrotate.
    #
    SNAPLOGDIR=/var/log/snapwebsites
    LOGFILE=${SNAPLOGDIR}/${PACKAGENAME}.log
    touch ${LOGFILE}
    chown snapwebsites:snapwebsites ${LOGFILE}
    chmod 640 ${LOGFILE}

    SNAPSECURELOGDIR=/var/log/snapwebsites/secure
    SECURELOGFILE=${SNAPSECURELOGDIR}/${PACKAGENAME}.log
    touch ${SECURELOGFILE}
    chown snapwebsites:snapwebsites ${SECURELOGFILE}
    chmod 640 ${SECURELOGFILE}

    # Signal snapdbproxy since we just added new tables
    #
    snapsignal snapdbproxy/NEWTABLE

    # We added the 01-iptables.conf file, make sure it is taken in account
    #
    invoke-rc.d rsyslog restart

    # We install some files for fail2ban, so we need to restart it
    #
    if systemctl -q is-active fail2ban
    then
        systemctl reload fail2ban
    fi

    # make sure the snapinitfirewall service is enabled on next reboot
    # but do not start it yet because when the bundle is running the
    # configuration file with the variables is not yet setup properly.
    #
    systemctl -q enable snapinitfirewall
fi


# vim: ts=4 sw=4 et nocindent
